#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

// Function to display the to-do list
void displayTodoList(const vector<string>& tasks) {
    if (tasks.empty()) {
        cout << "Todo list is empty." << endl;
    } else {
        cout << "Todo List:" << endl;
        for (size_t i = 0; i < tasks.size(); ++i) {
            cout << i + 1 << ". " << tasks[i] << endl;
        }
    }
}

int main() {
    vector<string> todoList;

    cout << "Welcome to the Todo List Manager!" << endl;

    while (true) {
        cout << "\nOptions:\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Delete Task\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";

        int choice;
        cin >> choice;

        switch (choice) {
            case 1: {
                cout << "Enter the task: ";
                cin.ignore(); // Clear the input buffer
                string task;
                getline(cin, task);
                todoList.push_back(task);
                cout << "Task added successfully." << endl;
                break;
            }
            case 2:
                displayTodoList(todoList);
                break;
            case 3: {
                displayTodoList(todoList);
                if (!todoList.empty()) {
                    cout << "Enter the task number to delete: ";
                    int taskNumber;
                    cin >> taskNumber;

                    if (taskNumber >= 1 && taskNumber <= static_cast<int>(todoList.size())) {
                        todoList.erase(todoList.begin() + taskNumber - 1);
                        cout << "Task deleted successfully." << endl;
                    } else {
                        cout << "Invalid task number." << endl;
                    }
                }
                break;
            }
            case 4:
                cout << "Exiting the Todo List Manager. Goodbye!" << endl;
                return 0;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    }

    return 0;
}
